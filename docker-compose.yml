version: '3'

networks:
  crypto-network:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    networks:
      - crypto-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    healthcheck:
      test: ["CMD", "bash", "-c", "echo ruok | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    networks:
      - crypto-network
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 5

  init-kafka:
    image: confluentinc/cp-kafka:7.3.0
    networks:
      - crypto-network
    depends_on:
      kafka:
        condition: service_healthy
    command: >
      bash -c "
        echo 'Waiting for Kafka to be ready...'
        kafka-topics --bootstrap-server kafka:29092 --list
        echo 'Creating kafka topics...'
        kafka-topics --bootstrap-server kafka:29092 --create --if-not-exists --topic quotes.crypto --replication-factor 1 --partitions 1
        echo 'Successfully created the following topics:'
        kafka-topics --bootstrap-server kafka:29092 --list
      "

  app:
    build: .
    container_name: crypto-market-data
    networks:
      - crypto-network
    environment:
      - KRAKEN_WS_URL=wss://ws.kraken.com
      - KAFKA_BROKER=kafka:29092
      - KAFKA_TOPIC=quotes.crypto
      - WS_PORT=8080
      - CRYPTO_PAIRS=XBT/USD,ETH/USD
    ports:
      - "8080:8080"
    depends_on:
      init-kafka:
        condition: service_completed_successfully
    restart: unless-stopped 